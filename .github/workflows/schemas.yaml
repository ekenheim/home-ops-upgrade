---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Schemas"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Every day at midnight
  push:
    branches: ["main"]
    paths: [".github/workflows/publish-schemas.yaml"]

jobs:
  publish:
    name: Schemas
    runs-on: ["gha-runner-scale-set"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get Secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          secrets: |
            e2c5d873-fea3-43c6-a5e8-b1650077db0d > CLOUDFLARE_API_KEY
            163f1577-1009-4bbd-84cc-b165007809c3 > CLOUDFLARE_ACCOUNT_ID
            d7abec51-f77a-49fd-be89-b13400f196e8 > KUBECONFIG
            d3349f37-6ff4-406b-861a-b16101048306 > BOT_APP_ID
            12826224-0a9e-45f2-b8bb-b1610104f8c4 > BOT_APP_PRIVATE_KEY

      - name: Generate Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: "${{ env.BOT_APP_ID }}"
          private-key: "${{ env.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Setup Homebrew
        shell: bash
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew" >> $GITHUB_ENV
          echo "HOMEBREW_CELLAR=/home/linuxbrew/.linuxbrew/Cellar" >> $GITHUB_ENV
          echo "HOMEBREW_REPOSITORY=/home/linuxbrew/.linuxbrew/Homebrew" >> $GITHUB_ENV
          echo "PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH" >> $GITHUB_ENV
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

      - name: Setup Workflow Tools
        shell: bash
        run: |
          brew update
          brew install kubernetes-cli

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@v1
        with:
          encodedString: "${{ env.KUBECONFIG }}"
          fileName: kubeconfig

      - name: Download and run crd-extractor
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          curl -fsSL -o $GITHUB_WORKSPACE/crd-extractor.sh \
              https://raw.githubusercontent.com/datreeio/CRDs-catalog/43e4407642d4c37683c88711f37caa6c9c20ca40/Utilities/crd-extractor.sh
          chmod +x $GITHUB_WORKSPACE/crd-extractor.sh
          bash $GITHUB_WORKSPACE/crd-extractor.sh

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: "${{ env.CLOUDFLARE_API_KEY }}"
          accountId: "${{ env.CLOUDFLARE_ACCOUNT_ID }}"
          workingDirectory: /home/runner/.datree/crdSchemas
          command: pages deploy --project-name=lds-schemas --branch main .
