---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 4
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-12
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-path
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster postgres16-v2
  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath:  &destinationPath s3://postgresql/
      endpointURL: &endpointURL https://s3.${SECRET_DOMAIN}
      serverName: &currentCluster postgres-v2
      s3Credentials:
        accessKeyId:
          name: &accessKeyname cloudnative-pg-secret
          key: &accessKeykey aws-access-key-id
        secretAccessKey:
          name: &secretAccessKeyname cloudnative-pg-secret
          key: &secretAccessKey aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        data:
          compression: bzip2
        destinationPath: *destinationPath
        endpointURL: *endpointURL
        s3Credentials:
          accessKeyId:
            name: *accessKeyname
            key: *accessKeykey
          secretAccessKey:
            name: *secretAccessKeyname
            key: *secretAccessKey
