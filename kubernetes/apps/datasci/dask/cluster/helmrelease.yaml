apiVersion: kubernetes.dask.org/v1
kind: DaskCluster
metadata:
  name: dask-cluster
  # namespace: datasci # This CR is deployed into datasci by its Kustomization
spec:
  worker:
    replicas: 3
    metadata:
      labels:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: worker
          image: ghcr.io/dask/dask:2025.9.1-py3.10@sha256:6b4d3b614e884e1e773dc7f84844aaf4c8e420e6f642aa40b4d0d6d8ef6bcf25
          args:
            - dask-worker
            - --name
            - $(DASK_WORKER_NAME)
            - --dashboard
            - --dashboard-address
            - "8788"
          ports:
            - name: http-dashboard
              containerPort: 8788
              protocol: TCP
  scheduler:
    metadata:
      labels:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: scheduler
          image: ghcr.io/dask/dask:2025.9.1-py3.10@sha256:6b4d3b614e884e1e773dc7f84844aaf4c8e420e6f642aa40b4d0d6d8ef6bcf25
          args:
            - dask-scheduler
          ports:
            - name: tcp-comm
              containerPort: 8786
              protocol: TCP
            - name: http-dashboard
              containerPort: 8787
              protocol: TCP
          readinessProbe:
            httpGet:
              port: http-dashboard
              path: /health
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              port: http-dashboard
              path: /health
            initialDelaySeconds: 15
            periodSeconds: 20
    service:
      type: ClusterIP
      selector:
        dask.org/cluster-name: dask-cluster
        dask.org/component: scheduler
      ports:
        - name: tcp-comm
          protocol: TCP
          port: 8786
          targetPort: "tcp-comm"
        - name: http-dashboard
          protocol: TCP
          port: 8787
          targetPort: "http-dashboard"