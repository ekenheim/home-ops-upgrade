---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name dify-secret
spec:
  secretStoreRef:
    name: bitwarden-secrets-manager # Default store, can be overridden by dataFrom.sourceRef
    kind: ClusterSecretStore
  refreshInterval: 15m
  target:
    name: *name
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      engineVersion: v2
      data:
        # PostgreSQL Credentials for Dify (to be used in .env.production)
        DB_HOST: '{{ index . "pgbouncer-host" }}' # Key name from postgres-pguser-dify secret
        DB_PORT: '{{ index . "pgbouncer-port" }}'
        DB_USERNAME: '{{ .user }}' # Key name from postgres-pguser-dify secret
        DB_PASSWORD: '{{ .password }}' # Key name from postgres-pguser-dify secret
        DB_DATABASE: '{{ .dbname }}' # Key name from postgres-pguser-dify secret, should be 'dify'

        # S3/Minio Credentials for Dify
        S3_ENDPOINT: "{{ .FLYTE_MINIO_ENDPOINT }}" # Your actual Minio endpoint
        S3_BUCKET_NAME: "dify" # You'll need to create this bucket
        S3_ACCESS_KEY: "{{ .FLYTE_MINIO_ACCESS_KEY }}" # Key name from minio secret
        S3_SECRET_KEY: "{{ .FLYTE_MINIO_SECRET_KEY }}" # Key name from minio secret
        S3_REGION: "us-east-1" # Default, change if needed
        S3_USE_SSL: "true"

        # Redis (Dragonfly) Connection Details
        REDIS_HOST: "dragonfly.database.svc.cluster.local"
        REDIS_PORT: "6379"
        REDIS_USERNAME: "" # Empty if no auth
        REDIS_PASSWORD: "" # Empty if no auth
        REDIS_DB: "0" # Default Redis DB

        # Dify Admin User (optional)
        # ADMIN_EMAIL: "admin@example.com"
        # ADMIN_PASSWORD: "{{ .DIFY_ADMIN_PASSWORD }}" # Key name from dify-admin-config item

  dataFrom:
    - extract:
        key: postgres-pguser-dify # This Bitwarden/Vault item should contain: user, password, dbname, pgbouncer_host
      sourceRef:
        storeRef:
          name: crunchy-pgo-secrets # Store for PG credentials
          kind: ClusterSecretStore
    - extract:
        key: minio # This Bitwarden item should contain MINIO_ROOT_USER, MINIO_ROOT_PASSWORD
      sourceRef:
        storeRef:
          name: bitwarden-secrets-manager # Store for Minio credentials
          kind: ClusterSecretStore
    # - extract:
    #     key: dify-admin-config # Optional: Bitwarden item for DIFY_ADMIN_PASSWORD
    #   sourceRef:
    #     storeRef:
    #       name: bitwarden-secrets-manager
    #       kind: ClusterSecretStore
