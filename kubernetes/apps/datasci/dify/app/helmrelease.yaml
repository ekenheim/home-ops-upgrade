---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dify
spec:
  interval: 30m
  chart:
    spec:
      chart: dify
      version: 0.25.0 # Check for the latest version, 0.24.0 was latest noted
      sourceRef:
        kind: HelmRepository
        name: dify
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: qdrant
    # - name: dragonfly-cluster
    # - name: postgresql
  values:
    # REMOVE extraVolumes section
    # extraVolumes:
    #   - name: app-data
    #     persistentVolumeClaim:
    #       claimName: dify
    #   - name: app-assets
    #     persistentVolumeClaim:
    #       claimName: dify-assets
    #   - name: plugin-daemon-data # This volume is for pluginDaemon
    #     persistentVolumeClaim:
    #       claimName: dify-plugin-daemon

    global:
      imageRegistry: ""

    replicaCount: 1

    # Enable and configure chart-managed persistence
    persistence:
      enabled: true
      data:
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block
        volumeMode: Filesystem
      assets:
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: ceph-block
        volumeMode: Filesystem
      pluginDaemon:
        enabled: true
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        volumeMode: Filesystem

    dify:
      pluginDaemon:
        extraVolumeMounts: |-
          - name: plugin-daemon
            mountPath: /data
        extraEnv: |-
          - name: EDITION
            value: "SELF_HOSTED"
          - name: CONSOLE_URL
            value: "https://dify.${SECRET_DOMAIN}"
          - name: APP_URL
            value: "https://dify.${SECRET_DOMAIN}"
          - name: API_URL
            value: "https://dify.${SECRET_DOMAIN}/api"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_PASSWORD
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_PORT
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_DATABASE
          - name: DB_CHARSET
            value: "utf8mb4"
          - name: REDIS_HOST
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_HOST
          - name: REDIS_PORT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_PORT
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_USERNAME
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_PASSWORD
          - name: REDIS_DB
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_DB
          - name: STORAGE_TYPE
            value: "s3"
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_ENDPOINT
          - name: S3_BUCKET_NAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_BUCKET_NAME
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_ACCESS_KEY
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_SECRET_KEY
          - name: S3_REGION
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_REGION
          - name: S3_USE_SSL
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_USE_SSL
          - name: VECTOR_STORE
            value: "qdrant"
          - name: QDRANT_ENDPOINT
            value: "https://qdrant.ekenhome.se" # Direct value, or use .Values.externalQdrant.endpoint
          - name: SANDBOX_SSRFP_PROXY_URL
            value: "http://dify-sandbox-ssrf-proxy:8080"

      # customFiles: # REMOVED - We will use extraEnv
      #   ".env.production": |-\\n          ...

      # secretEnvVars: # REMOVED - Secrets will be directly mapped in extraEnv for components

      # Mount these volumes into the respective components
      # API component
      api:
        extraVolumeMounts: |-
          - name: data
            mountPath: /app/api/storage
          - name: assets
            mountPath: /app/api/assets
        extraEnv: |-
          - name: EDITION
            value: "SELF_HOSTED"
          - name: CONSOLE_URL
            value: "https://dify.${SECRET_DOMAIN}"
          - name: APP_URL
            value: "https://dify.${SECRET_DOMAIN}"
          - name: API_URL
            value: "https://dify.${SECRET_DOMAIN}/api"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_PASSWORD
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_PORT
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_DATABASE
          - name: DB_CHARSET
            value: "utf8mb4"
          - name: REDIS_HOST
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_HOST
          - name: REDIS_PORT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_PORT
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_USERNAME
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_PASSWORD
          - name: REDIS_DB
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_DB
          - name: STORAGE_TYPE
            value: "s3"
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_ENDPOINT
          - name: S3_BUCKET_NAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_BUCKET_NAME
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_ACCESS_KEY
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_SECRET_KEY
          - name: S3_REGION
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_REGION
          - name: S3_USE_SSL
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_USE_SSL
          - name: VECTOR_STORE
            value: "qdrant"
          - name: QDRANT_ENDPOINT
            value: "https://qdrant.ekenhome.se" # Direct value, or use .Values.externalQdrant.endpoint
          - name: SANDBOX_SSRFP_PROXY_URL
            value: "http://dify-sandbox-ssrf-proxy:8080"

      # Worker component
      worker:
        extraVolumeMounts: |-
          - name: data
            mountPath: /app/api/storage
          - name: assets
            mountPath: /app/api/assets
        extraEnv: |-
          - name: EDITION
            value: "SELF_HOSTED"
          - name: CONSOLE_URL
            value: "https://dify.${SECRET_DOMAIN}"
          - name: APP_URL
            value: "https://dify.${SECRET_DOMAIN}"
          - name: API_URL
            value: "https://dify.${SECRET_DOMAIN}/api"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_PASSWORD
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_PORT
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: DB_DATABASE
          - name: DB_CHARSET
            value: "utf8mb4"
          - name: REDIS_HOST
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_HOST
          - name: REDIS_PORT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_PORT
          - name: REDIS_USERNAME
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_USERNAME
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_PASSWORD
          - name: REDIS_DB
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: REDIS_DB
          - name: STORAGE_TYPE
            value: "s3"
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: dify-secret
                key: S3_ENDPOINT
          - name: SANDBOX_SSRFP_PROXY_URL
            value: "http://dify-sandbox-ssrf-proxy:8080"
          # Add other necessary env vars for worker like S3, QDRANT etc.

    ingress:
      enabled: true
      className: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: AI
        gethomepage.dev/name: Dify
        gethomepage.dev/icon: "brain-circuit.svg" # Ensure this icon exists or use another
        gethomepage.dev/description: "LLM App Platform"
        external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
      hosts:
        - host: &host "dify.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
          secretName: "dify-tls" # Assumes you have a cert-manager Issuer for this or provide cert manually

    # Disable components managed externally or not needed
    postgresql:
      enabled: false # Using external PostgreSQL
    redis:
      enabled: false # Using external Redis (Dragonfly)
    qdrant:
      enabled: false # Using external Qdrant
    weaviate:
      enabled: false
    milvus:
      enabled: false
    proxy:
      enabled: false # Using main ingress controller

    # External PostgreSQL (not needed if configuring via .env.production + secretEnvVars)
    # The chart's externalPostgresql doesn't seem to directly support secret refs for password
    # So, managing via customFiles and secretEnvVars is more flexible.
    # externalPostgresql:
    #   enabled: true
    #   host: populated-by-secret
    #   port: 5432
    #   user: populated-by-secret
    #   password: populated-by-secret
    #   database: populated-by-secret

    # External Qdrant
    externalQdrant:
      enabled: true
      endpoint: "https://qdrant.ekenhome.se" # Your Qdrant endpoint
      # apiKey: "${SECRET_QDRANT_API_KEY}" # If Qdrant needs an API key, manage via secrets

    # Storage configuration (S3)
    storage:
      type: s3
      # s3:
      #   bucket: populated-by-secret
      #   endpoint: populated-by-secret
      #   accessKey: populated-by-secret
      #   secretKey: populated-by-secret
      #   region: populated-by-secret
      #   useSSL: true
