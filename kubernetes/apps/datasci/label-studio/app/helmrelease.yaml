---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app label-studio
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3 # Match mlflow's version or specify desired version
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 1h
  # Add dependsOn if needed, like mlflow
  # dependsOn:
  #   - name: rook-ceph-cluster
  #     namespace: rook-ceph
  #   - name: volsync
  #     namespace: storage
  install:
    remediation:
      retries: 3 # Align with mlflow
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # Add driftDetection if desired
  # driftDetection:
  #   mode: enabled
  values:
    controllers:
      label-studio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: heartexlabs/label-studio
              tag: 1.19.0@sha256:6460e0559f5f8656ab5dec66d4ac4728da61435596d425f3ae7b24e3095768d6
            env:
              CSRF_TRUSTED_ORIGINS: "https://label-studio.${SECRET_DOMAIN}"
              EXPERIMENTAL_FEATURES: 1
              SSRF_PROTECTION_ENABLED: "true"
              DJANGO_DB: default
            envFrom:
              - secretRef:
                  name: label-studio-db-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup: # Add startup probe like mlflow
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 1
                  failureThreshold: 30 # Adjust as needed
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # Match mlflow
        runAsGroup: 65534 # Match mlflow
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      main:
        className: internal # Match mlflow
        annotations:
          # Add annotations similar to mlflow if needed, e.g., IP whitelist
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - host: &host label-studio.${SECRET_DOMAIN} # Use label-studio host
            paths:
              - path: / # Use root path
                pathType: Prefix # Use Prefix
                service:
                  identifier: app # Match service name
                  port: http # Match service port name
        tls:
          - hosts:
              - *host
    persistence:
      data:
        # type: emptyDir # Change from emptyDir
        enabled: true # Enable persistence
        existingClaim: *app # Use an existing PVC named label-studio
        globalMounts:
          - path: /label-studio/data/ # Keep the mount path