---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name mlflow-secret
spec:
  secretStoreRef:
    name: bitwarden-secrets-manager
    kind: ClusterSecretStore
  refreshInterval: 15m
  target:
    name: *name
    template:
      engineVersion: v2
      data:
        # App
        BAZARR__API_KEY: '{{ .BAZARR_API_KEY }}'
  dataFrom:
  - extract:
      key: mlflow
---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name mlflow-db-secret
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: *name
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      type: Opaque
      data:
        POSTGRES_ENABLED: "true"
        POSTGRES_DB: '{{ .dbname }}'
        MLFLOW_BACKEND_STORE_URI: 'postgresql+psycopg2://{{ .user }}:{{ .password }}@{{ index . "pgbouncer-host" }}:5432/mlflow'
        POSTGRES_USER: '{{ .user }}'
        POSTGRES_PASSWORD: '{{ .password }}'
  dataFrom:
  - extract:
      key: postgres-pguser-mlflow

---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name mlflow-minio-creds # Name referenced in HelmRelease
spec:
  secretStoreRef:
    # Assuming MinIO creds are in Bitwarden like the other app secret
    name: bitwarden-secrets-manager
    kind: ClusterSecretStore
  refreshInterval: 1h # Credentials likely don't change often
  target:
    name: *name
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Keys expected by MLflow/S3 clients
        AWS_ACCESS_KEY_ID: "{{ .access-key }}"
        AWS_SECRET_ACCESS_KEY: "{{ .secret-key }}"
  dataFrom:
    - extract:
        # Key name in Bitwarden where access-key and secret-key fields exist
        key: minio-secondary-creds
