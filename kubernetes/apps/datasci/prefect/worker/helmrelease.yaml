---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prefect-worker
spec:
  chart:
    spec:
      chart: prefect-worker
      version: 2025.3.28152731
      sourceRef:
        kind: HelmRepository
        name: prefect
        namespace: flux-system
  interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    worker:
      # -- unique cluster identifier, if none is provided this value will be inferred at time of helm install
      clusterUid: ""

      image:
        repository: prefecthq/prefect
        prefectTag: 2-python3.11-kubernetes
        debug: false

      ## connection settings
      apiConfig: "selfHostedServer"
      config:
        # -- name of prefect work pool the worker will poll
        workPool: default
        # -- how often the worker will query for runs
        queryInterval: 5
        # -- when querying for runs, how many seconds in the future can they be scheduled
        prefetchSeconds: 10
        # -- connect using HTTP/2 if the server supports it (experimental)
        http2: true
        type: kubernetes
        installPolicy: prompt
        limit: null

      ## general configuration of the agent
      replicaCount: 1

      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 1Gi

      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
      podSecurityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1002
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
      containerSecurityContext:
        runAsUser: 1000
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false

    ## Role configuration
    role:
      ## List of extra role permissions
      ## e.g:
      ## extraPermissions:
      ##  - apiGroups: [""]
      ##    resources: ["pods", "services"]
      ##    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
      extraPermissions: []
