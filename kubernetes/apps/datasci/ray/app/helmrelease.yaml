---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ray
spec:
  interval: 15m
  chart:
    spec:
      chart: ray-cluster
      version: 1.4.2
      sourceRef:
        kind: HelmRepository
        name: kuberay
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    image:
      repository: rayproject/ray
      tag: 2.48.0
      pullPolicy: IfNotPresent

    head:
      rayStartParams:
        dashboard-host: '0.0.0.0'
        ray-client-server-port: '10001'
      resources:
        limits:
          cpu: "2"
          memory: "4G"
        requests:
          cpu: "1"
          memory: "2G"
      containerEnv:
        - name: RAY_PROMETHEUS_HOST
          value: "http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090"
        - name: RAY_GRAFANA_HOST
          value: "http://grafana.observability.svc.cluster.local:80"
        - name: RAY_GRAFANA_IFRAME_HOST
          value: "https://grafana.${SECRET_DOMAIN}"
        - name: MLFLOW_S3_ENDPOINT_URL
          value: "http://minio-secondary.storage.svc.cluster.local:9000"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: mlflow-minio-creds
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-minio-creds
              key: AWS_SECRET_ACCESS_KEY

    worker:
      groupName: workergroup
      replicas: 2
      minReplicas: 1
      maxReplicas: 5
      resources:
        limits:
          cpu: "2"
          memory: "4G"
        requests:
          cpu: "1"
          memory: "2G"
      containerEnv:
        - name: RAY_PROMETHEUS_HOST
          value: "http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090"
        - name: RAY_GRAFANA_HOST
          value: "http://grafana.observability.svc.cluster.local:80"
        - name: RAY_GRAFANA_IFRAME_HOST
          value: "https://grafana.${SECRET_DOMAIN}"
        - name: MLFLOW_S3_ENDPOINT_URL
          value: "http://minio-secondary.storage.svc.cluster.local:9000"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: mlflow-minio-creds
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: mlflow-minio-creds
              key: AWS_SECRET_ACCESS_KEY

    rayDashboard:
      enabled: true
      port: 8265

    rayClientServer:
      enabled: true
      port: 10001

    ingress:
      enabled: false  # Disable the default ingress since we're using Istio

    service:
      type: ClusterIP  # Keep as ClusterIP since we're using ray-external for external access
      port: 8265

  dependsOn:
    - name: kuberay-operator
---
apiVersion: v1
kind: Service
metadata:
  name: ray-external
  namespace: datasci
  annotations:
    io.cilium/lb-ipam-ips: "${SVC_SYNCTHING_ADDR}"
spec:
  type: LoadBalancer
  ports:
    - name: client
      port: 10001
      targetPort: 10001
    - name: dashboard
      port: 8265
      targetPort: 8265
    - name: serve
      port: 8000
      targetPort: 8000
    - name: runtime-env-agent
      port: 8080
      targetPort: 8080
    - name: gcs-server
      port: 6379
      targetPort: 6379
  selector:
    ray.io/node-type: head
    ray.io/cluster: ray-kuberay

