---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app your-spotify
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/yooooomi/your_spotify_server
              tag: 1.13.1@sha256:552f1577b38fdd2d9e1a52a5f945c5471f57feaed9684c7b88abc9640c4a2fac
            env:
              TIMEZONE: Australia/Sydney
              API_ENDPOINT: &endpoint https://spotify.${SECRET_DOMAIN}/api
              CLIENT_ENDPOINT: https://spotify.${SECRET_DOMAIN}
              MONGO_ENDPOINT: mongodb://your-spotify-mongodb:27017/your_spotify
              PORT: &port 8080
            envFrom:
              - secretRef:
                  name: your-spotify-secret
            probes: &probes
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
      web:
        containers:
          main:
            image:
              repository: ghcr.io/yooooomi/your_spotify_client
              tag: 1.13.1@sha256:a9672141625f47ce34aa837ddab15d436bc6b3a72cff001a906fe79b078403e5
            env:
              API_ENDPOINT: *endpoint
            probes: *probes
            securityContext: *securityContext
      mongodb:
        type: statefulset
        statefulset:
          podManagementPolicy: OrderedReady
        containers:
          main:
            image:
              repository: docker.io/library/mongo
              tag: 6.0.4-focal
            probes: *probes
    service:
      server:
        controller: server
        primary: true
        ports:
          http:
            port: *port
      web:
        controller: web
        ports:
          http:
            port: &webport 3000
      mongodb:
        controller: mongodb
        ports:
          http:
            port: 27017
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          hajimari.io/icon: mdi:spotify
          nginx.ingress.kubernetes.io/rewrite-target: /$2
          nginx.ingress.kubernetes.io/configuration-snippet: |
            more_set_headers "Content-Type: text/css" always;
            more_set_headers "Content-Type: application/javascript" always;
            more_set_headers "X-Content-Type-Options: nosniff" always;
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        hosts:
          - host: &host "spotify.${SECRET_DOMAIN}"
            paths:
              - path: /api(/|$)(.*)
                pathType: Prefix
                service:
                  identifier: server
                  port: http
              - path: /static/(.*)
                pathType: Prefix
                service:
                  identifier: web
                  port: http
              - path: /
                pathType: Prefix
                service:
                  identifier: web
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      configs:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: *app
        advancedMounts:
          mongodb:
            main:
              - path: /data/db
