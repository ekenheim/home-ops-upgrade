---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &bwname gitlab-bitwarden-secret
spec:
  secretStoreRef:
    name: bitwarden-secrets-manager # Use Bitwarden store
    kind: ClusterSecretStore
  refreshInterval: 15m
  target:
    name: *bwname
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # GitLab Core
        INITIAL_ROOT_PASSWORD: "{{ .GITLAB_ROOT_PASSWORD }}"
        # GitLab Runner
        runner-registration-token: "{{ .RUNNER_REGISTRATION_TOKEN }}"
        runner-token: "{{ .GITLAB_TOKEN_SECRET }}"
        # SMTP - Assuming these are also in the main gitlab bitwarden secret
        SMTP_PASSWORD: "{{ .GITLAB_SMTP_PASSWORD }}"
        SMTP_SERVER: "{{ .SMTP_SERVER }}"
        SMTP_USERNAME: "{{ .GITLAB_SMTP_USERNAME }}"
        SMTP_PORT: "{{ .SMTP_PORT }}"
        # External Minio Credentials
        MINIO_ACCESS_KEY: "{{ .AWS_ACCESS_KEY_ID }}" # Assuming keys are nested under 'minio' object
        MINIO_SECRET_KEY: "{{ .AWS_SECRET_ACCESS_KEY }}" # Assuming keys are nested under 'minio' object
        # Add the 'connection' key required by volume mounts
        connection: |  # Use literal block scalar for multi-line YAML
          provider: AWS
          region: us-east-1
          aws_access_key_id: '{{ .AWS_ACCESS_KEY_ID }}'
          aws_secret_access_key: '{{ .AWS_SECRET_ACCESS_KEY }}'
          # Minio specific settings
          use_iam_profile: false
          endpoint: 'http://minio-secondary.storage.svc.cluster.local:9000'
          path_style: true
  dataFrom:
    - extract:
        key: gitlab # Use 'gitlab' as the key in Bitwarden
    # Add extraction for Minio secrets
    - extract:
        key: minio-secondary-creds # Assumed key for Minio secrets in Bitwarden
---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &dbname gitlab-db-secret
spec:
  secretStoreRef:
    name: crunchy-pgo-secrets # Use Crunchy Postgres store
    kind: ClusterSecretStore
  refreshInterval: 1m
  target:
    name: *dbname
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Map Crunchy keys to GitLab Helm chart keys
        GITLAB_DB_HOST: '{{ index . "pgbouncer-host" }}' # Use pgbouncer host from Crunchy secret
        # GITLAB_DB_PORT: '{{ index . "pgbouncer-port" }}' # Port is set directly in HelmRelease usually
        GITLAB_DB_NAME: '{{ .dbname }}'
        GITLAB_DB_USERNAME: '{{ .user }}'
        GITLAB_DB_PASSWORD: '{{ .password }}'
  dataFrom:
    - extract:
        key: postgres-pguser-gitlab # Assumed key for GitLab user in Crunchy secret

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-registry-storage-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secrets-manager
  target:
    name: gitlab-registry-storage-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        config.yml: | # Registry S3 storage configuration
          storage:
            s3:
              accesskey: "{{ .MINIO_ACCESS_KEY }}"
              secretkey: "{{ .MINIO_SECRET_KEY }}"
              region: us-east-1 # Match your Minio region
              regionendpoint: http://minio-secondary.storage.svc.cluster.local:9000
              bucket: gitlab-registry # Define bucket name
              secure: false # Use http for internal endpoint
              v4auth: true
              rootdirectory: /
            delete:
              enabled: true
  dataFrom:
    - extract:
        key: minio-secondary-creds

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-s3cmd-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secrets-manager
  target:
    name: gitlab-s3cmd-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      # Template for .s3cfg file used by toolbox backups
      # Note: Indentation and quoting are important here
      data:
        .s3cfg: |
          [default]
          access_key = {{ .MINIO_ACCESS_KEY | quote }}
          secret_key = {{ .MINIO_SECRET_KEY | quote }}
          bucket_location = us-east-1
          host_base = minio-secondary.storage.svc.cluster.local:9000
          host_bucket = minio-secondary.storage.svc.cluster.local:9000/%(bucket)
          # use_https = False # s3cmd defaults to http if endpoint doesn't start with https://
          signature_v2 = False
  dataFrom:
    - extract:
        key: minio-secondary-creds
