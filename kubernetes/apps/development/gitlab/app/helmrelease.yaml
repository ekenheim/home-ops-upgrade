---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gitlab
spec:
  releaseName: gitlab
  interval: 30m
  chart:
    spec:
      chart: gitlab
      version: 8.11.1
      sourceRef:
        kind: HelmRepository
        name: gitlab-charts
        namespace: flux-system
      interval: 15m
  timeout: 30m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      edition: ce
      time_zone: ${TIMEZONE}
      extraEnv:
        GITLAB_LOG_LEVEL: 'error'
      initialRootPassword:
        secret: gitlab-bitwarden-secret
        key: INITIAL_ROOT_PASSWORD
      nodeSelector:
        kubernetes.io/arch: amd64
      hosts:
        domain: ${SECRET_DOMAIN}
        externalIP: ""
        gitlab:
          name: "gitlab.${SECRET_DOMAIN}"
      ingress:
        class: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Development
          gethomepage.dev/name: GitLab
          gethomepage.dev/icon: gitlab.svg
          gethomepage.dev/description: "Git Repository Manager"
          nginx.ingress.kubernetes.io/enable-global-auth: 'false'
        configureCertmanager: false
        tls:
          enabled: true
          secretName: "${SECRET_DOMAIN}-tls"
      certmanager:
        installCRDs: false
        install: false
        rbac:
          create: false
      kas:
        enabled: false
      pages:
        enabled: true
      email:
        display_name: 'GitLab'
        from: 'gitlab@${SECRET_DOMAIN}'
        reply_to: 'no-reply@${SECRET_DOMAIN}'
      psql:
        port: 5432
        password:
          secret: gitlab-db-secret
          key: GITLAB_DB_PASSWORD
      redis:
        host: dragonfly.databases.svc.cluster.local
        port: 6379
        auth:
          enabled: false
      smtp:
        enabled: true
        domain: ${SECRET_DOMAIN}
        starttls_auto: true
        password:
          secret: gitlab-bitwarden-secret
          key: SMTP_PASSWORD
      appConfig:
        uploads:
          object_store:
            enabled: true
        artifacts:
          object_store:
            enabled: true
        lfs:
          object_store:
            enabled: true
        packages:
          object_store:
            enabled: true
        external_diffs:
          object_store:
            enabled: true
        terraform_state:
          object_store:
            enabled: true
        omniauth:
          enabled: false
      objectstorage:
        enabled: true
        proxy_download: true
        connection:
          secret: gitlab-bitwarden-secret
        config:
          provider: AWS
          region: us-east-1
          endpoint: http://minio-secondary-app.storage.svc.cluster.local:9000
          path_style: true
          accessKey:
            secret: gitlab-bitwarden-secret
            key: MINIO_ACCESS_KEY
          secretKey:
            secret: gitlab-bitwarden-secret
            key: MINIO_SECRET_KEY
        buckets:
          artifacts: gitlab-artifacts
          lfs: gitlab-lfs
          uploads: gitlab-uploads
          packages: gitlab-packages
          mr_diffs: gitlab-mr-diffs
          terraform_state: gitlab-terraform-state
    minio:
      install: false
    gitlab:
      gitaly:
        resources: {}
      webservice:
        minReplicas: 1
        maxReplicas: 2
        workerProcesses: 2
        resources: {}
      sidekiq:
        minReplicas: 1
        maxReplicas: 2
        resources: {}
      gitlab-shell:
        minReplicas: 1
        maxReplicas: 2
        resources: {}
      gitlab-pages:
        resources: {}
    postgresql:
      install: false
    redis:
      install: false
    certmanager:
      install: false
    nginx-ingress:
      enabled: false
    prometheus:
      install: false
    grafana:
      enabled: false
    gitlab-runner:
      install: true
      concurrent: 2
      runners:
        nodeSelector:
          kubernetes.io/arch: amd64
        secret: gitlab-bitwarden-secret
        config: |
          [[runners]]
            environment = ["FF_GITLAB_REGISTRY_HELPER_IMAGE=true"]
            builds_dir = "/builds"
            [runners.feature_flags]
              FF_USE_ADVANCED_POD_SPEC_CONFIGURATION = true
            [runners.kubernetes]
              node_selector_overwrite_allowed = ".*"
              image = "alpine:latest"
              privileged = true
              cpu_limit = "600m"
              memory_limit = "1Gi"
              service_cpu_limit = "600m"
              service_memory_limit = "1Gi"
              helper_cpu_limit = "600m"
              helper_memory_limit = "200Mi"
              [[runners.kubernetes.volumes.host_path]]
                name = "devices"
                host_path = "/dev"
                mount_path = "/dev"
                read_only = true
              [[runners.kubernetes.pod_spec]]
                name = "ephemeral-builds"
                patch_type = "strategic"
                patch = """
                  containers:
                  - name: build
                    volumeMounts:
                    - name: builds
                      mountPath: /builds
                  - name: helper
                    volumeMounts:
                    - name: builds
                      mountPath: /builds
                  volumes:
                  - name: builds
                    ephemeral:
                      volumeClaimTemplate:
                        spec:
                          accessModes: [ ReadWriteOnce ]
                          resources:
                            requests:
                              storage: 8Gi
              """
              [[runners.kubernetes.volumes.empty_dir]]
                name = "docker-certs"
                mount_path = "/certs/client"
                medium = "Memory"
      securityContext:
        runAsUser: 999
        fsGroup: 999
      resources: {}
  valuesFrom:
    - kind: Secret
      name: gitlab-db-secret
      valuesKey: GITLAB_DB_HOST
      targetPath: global.psql.host
    - kind: Secret
      name: gitlab-db-secret
      valuesKey: GITLAB_DB_NAME
      targetPath: global.psql.database
    - kind: Secret
      name: gitlab-db-secret
      valuesKey: GITLAB_DB_USERNAME
      targetPath: global.psql.username
    - kind: Secret
      name: gitlab-bitwarden-secret
      valuesKey: SMTP_SERVER
      targetPath: global.smtp.address
    - kind: Secret
      name: gitlab-bitwarden-secret
      valuesKey: SMTP_USERNAME
      targetPath: global.smtp.user_name
    - kind: Secret
      name: gitlab-bitwarden-secret
      valuesKey: SMTP_PORT
      targetPath: global.smtp.port
