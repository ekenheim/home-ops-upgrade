---
# yaml-language-server: $schema=https://lds-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: harbor-app-values
  namespace: harbor # Should match the targetNamespace of your Kustomization
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secrets-manager # Updated to use your Bitwarden secret store
  refreshInterval: 15m # Match your umami example, adjust if needed
  target:
    name: harbor-app-values # This is the K8s Secret that will be created
    creationPolicy: Owner # Or Merge, if you prefer (umami uses Merge for one, Owner for another)
    template:
      engineVersion: v2
      data:
        # These are the keys Flux will use for substitution in the HelmRelease
        SECRET_HARBOR_ADMIN_PASSWORD: "{{ .HARBOR_ADMIN_PASSWORD }}" # Assumes HARBOR_ADMIN_PASSWORD is the key in Bitwarden
        SECRET_HARBOR_ENCRPYTION_KEY: "{{ .HARBOR_ENCRYPTION_KEY }}" # Assumes HARBOR_ENCRYPTION_KEY is the key in Bitwarden
        # SECRET_DOMAIN: "{{ .SECRET_DOMAIN }}" # If you also store SECRET_DOMAIN in this Bitwarden item
  dataFrom:
  - extract:
      # Replace 'harbor-secrets' with the actual name of your Bitwarden secret entry for Harbor
      key: harbor-secrets