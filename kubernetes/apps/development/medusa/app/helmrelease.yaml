# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: medusa
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      medusa-server:
        containers:
          main:
            image:
              repository: ghcr.io/medusajs/medusa
              tag: latest
            env:
              NODE_ENV: development
              PORT: "9000"
              DATABASE_TYPE: postgres
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: DATABASE_URL
              REDIS_URL:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: REDIS_URL
              JWT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: JWT_SECRET
              COOKIE_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: COOKIE_SECRET
              STORE_CORS:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: STORE_CORS
              ADMIN_CORS:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: ADMIN_CORS
            command:
              - sh
              - -c
              - >
                medusa migrations run &&
                medusa start
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

      medusa-worker:
        containers:
          main:
            image:
              repository: ghcr.io/medusajs/medusa
              tag: latest
            env:
              NODE_ENV: development
              DATABASE_TYPE: postgres
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: DATABASE_URL
              REDIS_URL:
                valueFrom:
                  secretKeyRef:
                    name: medusa-secret
                    key: REDIS_URL
            command:
              - sh
              - -c
              - >
                medusa migrations run &&
                medusa start
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

    service:
      medusa-server:
        controller: medusa-server
        ports:
          http:
            port: 9000
            protocol: HTTP

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress.${SECRET_DOMAIN}
          hajimari.io/icon: mdi:shopping
        hosts:
          - host: &host "medusa.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: medusa-server
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /app/data
