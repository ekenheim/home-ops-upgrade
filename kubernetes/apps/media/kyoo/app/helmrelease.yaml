---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app kyoo
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      back:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-migrations:
            envFrom:
              - secretRef:
                  name: kyoo-secret
            image:
              repository: ghcr.io/zoriya/kyoo_migrations
              tag: master@sha256:66779daf29fe66bdb827e4895d2015b8f7a1eabad46c436bbe84bf94f43825a5
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_back
              tag: master@sha256:ccb8ed67eb03e6f4305616ee5b2e47956ba7e7c737f781ddf32ff6079a12bb6c
            env:
              TRANSCODER_URL: http://kyoo-transcoder:7666
            envFrom: &envFrom
              - secretRef:
                  name: kyoo-secret
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                cpu: 10m
                memory: 1Gi
              limits:
                cpu: 2000m
                memory: 8Gi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod: &pod
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 10000, 109]

      front:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_front
              tag: master@sha256:c2e3444e35761648ff0dc68937ddd23c9deda63fae562323d2c51b00b7f4ace9
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
                memory: 100Mi
              limits:
                memory: 1Gi
            securityContext: *securityContext
        pod: *pod

      scanner:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_scanner
              tag: master@sha256:7f0eff2832be527d194714493adc2c7ef9393795fca7dfc1f8630996c5208d3d
            args: ["scanner"]
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 1Gi
            securityContext: *securityContext
        pod: *pod

      matcher:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_scanner
              tag: master@sha256:7f0eff2832be527d194714493adc2c7ef9393795fca7dfc1f8630996c5208d3d
            args: ["matcher"]
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 400Mi
            securityContext: *securityContext
        pod: *pod

      autosync:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_autosync
              tag: master@sha256:84b39928a1e811e2e43f61d5fa5e3cb547c712f3f9cc650f67d48cca0e524204
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 100Mi
            securityContext: *securityContext
        pod: *pod

      meilisearch:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/getmeili/meilisearch
              tag: v1.8
            env:
              MEILI_ENV: production
              MEILI_NO_ANALYTICS: true
              MEILI_MASTER_KEY:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-secret
                    key: MEILI_MASTER_KEY
            probes:
              liveness: &searchprobes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &searchport 7700
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *searchprobes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 400Mi
            securityContext: *securityContext
        pod: *pod

      rabbitmq:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/rabbitmq
              tag: 3-alpine
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 300Mi
            securityContext: *securityContext
        pod: *pod

      transcoder:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_transcoder
              tag: master@sha256:ab9d38413350eefa488c8dd0ed89f56dcbd20f92b32b50387414243be0143e44
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
            securityContext: *securityContext
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 10000, 109]

    service:
      back:
        controller: back
        ports:
          http:
            port: 5000
      front:
        controller: front
        ports:
          http:
            port: 8901
      rabbitmq:
        controller: rabbitmq
        ports:
          http:
            port: 5672
      meilisearch:
        controller: meilisearch
        ports:
          http:
            port: *searchport
      transcoder:
        controller: transcoder
        ports:
          http:
            port: 7666

    ingress:
      main:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            rewrite /api/(.*) /$1 break;
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &host kyoo.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: front
                  port: http
              - path: /api
                pathType: Prefix
                service:
                  identifier: back
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      kyoo:
        existingClaim: *app
        advancedMounts:
          back:
            app:
              - path: /metadata
      search:
        existingClaim: kyoo-meilisearch
        advancedMounts:
          meilisearch:
            app:
              - path: /meili_data
      transcoder-metadata:
        existingClaim: kyoo-transcoder-metadata
        advancedMounts:
          transcoder:
            app:
              - path: /metadata
      cache:
        type: emptyDir
        advancedMounts:
          transcoder:
            app:
              - path: /cache
      media:
        type: nfs
        server: ${NAS_IP:=temp}
        path: ${SECRET_NFS_DATA:=temp}
        globalMounts:
          - path: /data
            subPath: media
            readOnly: true
